Using text_indentation

----------------------------------
doctest for 5-text_indentation.py
----------------------------------

function that prints a text with 2 new lines after each of these characters: ., ? and :

Testing with string text
::
>>> text_indentation = __import__("5-text_indentation").text_indentation
>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
... beatiorem! Iam ruinas videres""")
Lorem ipsum dolor sit amet, consectetur adipiscing elit?
<BLANKLINE>
Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem?
<BLANKLINE>
Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere?
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens?
<BLANKLINE>
Si id dicis, vicimus?
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus?
<BLANKLINE>
Sin aliud quid voles, postea?
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico?
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Testing with integer
::
>>> text_indentation(1)
Traceback (most recent call last):
TypeError: text must be a string

Testing with float
::
>>> text_indentation(1.8)
Traceback (most recent call last):
TypeError: text must be a string

Testing with None
::
>>> text_indentation(None)
Traceback (most recent call last):
TypeError: text must be a string

Testing with empty
::
>>> text_indentation("")

